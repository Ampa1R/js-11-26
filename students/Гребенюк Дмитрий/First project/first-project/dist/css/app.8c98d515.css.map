{"version":3,"sources":["webpack:///src/src/App.vue"],"names":[],"mappings":"AAqKA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,iBAAA,CACA,aAAA,CACA,eACA,CAEA,EACA,QAAA,CACA,SACA,CAEA,OACA,iBAAA,CACA,aAAA,CACA,gBAAA,CACA,WAAA,CACA,YAAA,CACA,6BAAA,CACA,qBAAA,CACA,kBAAA,CACA,UACA,CAEA,MACA,cAAA,CACA,UACA,CAEA,aACA,UAAA,CACA,WAAA,CACA,qBAAA,CACA,QAAA,CACA,iBAAA,CACA,kCAGA,CAEA,QACA,WAAA,CACA,WACA,CAEA,QACA,QAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,qBAAA,CACA,UAAA,CACA,qBACA,CAEA,YACA,eAAA,CACA,eACA,CAEA,QACA,aAAA,CACA,UACA,CAEA,KACA,aAAA,CAEA,YAAA,CACA,UAAA,CACA,qBAEA,CAEA,YAPA,gBAYA,CALA,OACA,YAAA,CACA,6BAAA,CAEA,cACA,CAEA,WACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,WAAA,CACA,WAAA,CACA,kCACA,CAEA,eACA,WAAA,CACA,UACA,CAEA,SACA,iBAAA,CACA,SAAA,CACA,SACA","file":"app.8c98d515.css","sourcesContent":["<template>\n    <div id=\"app\">\n        <Header :search=\"searchValue\" :v-basket-goods=\"basketGoods\" :v-visible=\"visible\" @remove=\"removeItem\" @visible=\"visible = !visible\" v-model=\"searchValue\">\n        </Header>\n        <Goods @handle-add=\"addToBasket\" :goods=\"filteredGoods\"></Goods>\n        <!--        <v-error class=\"v-error\" v-if=\"errorStatus\" :errorStatus=\"errorStatus\"></v-error>-->\n    </div>\n</template>\n\n<script>\n    import Header from './components/Header.vue'\n    import Goods from './components/Goods.vue'\n    const API = 'http://localhost:3000/api';\n    const sendRequest = (path, method = 'POST', body = {}) => {\n        return new Promise((resolve, reject) => {\n            const xhr = new XMLHttpRequest();\n            xhr.timeout = 10000;\n            xhr.ontimeout = () => {\n                console.log('timeout!');\n            }\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        console.log('Error!', xhr.responseText);\n                        reject(xhr.responseText);\n                    }\n                }\n            }\n            xhr.open(method, `${API}/${path}`);\n            xhr.setRequestHeader('Content-type', 'application/json');\n            xhr.send(JSON.stringify(body));\n        });\n\n    }\n\n    export default {\n        name: 'App',\n        components: {\n            Header,\n            Goods,\n        },\n        data() {\n            return {\n                goods: [],\n                basketGoods: [],\n                searchValue: '',\n                visible: false,\n                errorStatus: false\n            }\n        },\n        mounted() {\n            this.fetchData();\n            this.fetchBasketData();\n        },\n\n        methods: {\n            fetchData() {\n                return new Promise((resolve) => {\n                    sendRequest('catalog', 'GET')\n                        .then(\n                            (data) => {\n                                this.goods = data;\n                                resolve();\n                            }\n                        )\n                        .catch(\n                            () => {\n                                this.errorStatus = true;\n                                resolve();\n                            }\n                        )\n                })\n\n            },\n            fetchBasketData() {\n                return new Promise((resolve) => {\n                    sendRequest('basket', 'GET')\n                        .then(\n                            (data) => {\n                                this.basketGoods = data;\n                                resolve();\n                            }\n                        )\n                        .catch(\n                            () => {\n                                this.errorStatus = true;\n                                resolve();\n                            }\n                        )\n\n                })\n            },\n            addToBasket(item) {\n                sendRequest('basket', 'POST', item)\n                    .then((result) => {\n                        console.log('Result', result);\n                        if (!result.success) {\n                            console.log('addToBasket error');\n                            return;\n                        }\n                        const index = this.basketGoods.findIndex((basketItem) => basketItem.id === item.id);\n                        if (index > -1) {\n                            this.basketGoods[index].quantity += 1;\n                            // this.basketGoods[index] = { ...this.basketGoods[index], quantity: this.basketGoods[index].quantity + 1 };\n                        } else {\n                            this.basketGoods.push({\n                                ...item,\n                                quantity: 1\n                            });\n                        }\n                        console.log(this.basketGoods);\n                    })\n//                    .catch(\n//                        () => {\n//                            this.errorStatus = true;\n//                            resolve();\n//                        }\n//                    )\n\n            },\n            removeItem(item) {\n                sendRequest('basket-remove', 'POST', item)\n                    .then((result) => {\n                        console.log('Result', result);\n                        if (!result.success) {\n                            console.log('Remove to basket error');\n                            return;\n                        }\n                        const index = this.basketGoods.findIndex((basketItem) => basketItem.id === item.id);\n                        if (index > -1) {\n                            if (this.basketGoods[index].quantity > 1) {\n                                this.basketGoods[index].quantity -= 1;\n                            } else {\n                                this.basketGoods = this.basketGoods.filter((goodsItem) => goodsItem.id !== parseInt(item.id));\n                            }\n\n                        }\n                        console.log(item);\n                    })\n            }\n\n        },\n        computed: {\n            filteredGoods() {\n                const regexp = new RegExp(this.searchValue.trim(), 'i');\n                return this.goods.filter((goodsItem) => regexp.test(goodsItem.title));\n            },\n            totalPrice() {\n                let sum = 0;\n                this.goods.map(item => {\n                    sum += item.price;\n                    console.log(sum)\n                });\n                return sum;\n\n            }\n        }\n\n    }\n\n</script>\n\n<style>\n    #app {\n        font-family: Avenir, Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: center;\n        color: #2c3e50;\n        margin-top: 60px;\n    }\n\n    * {\n        margin: 0;\n        padding: 0;\n    }\n\n    header {\n        position: relative;\n        margin: 0 auto;\n        max-width: 1140px;\n        height: 50px;\n        display: flex;\n        justify-content: space-between;\n        background-color: #99CC99;\n        align-items: center;\n        padding: 2%;\n    }\n\n    .logo {\n        font-size: 20px;\n        color: #333333;\n    }\n\n    .cart-button {\n        width: 90px;\n        height: 25px;\n        background-color: #CCCCCC;\n        border: 0;\n        border-radius: 7px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n\n\n    }\n\n    .search {\n        height: 20px;\n        padding: 0.5%;\n    }\n\n    .basket {\n        top: 60px;\n        right: 20px;\n        width: 200px;\n        position: absolute;\n        border: 1px solid black;\n        padding: 1%;\n        background-color: #CCFF99;\n    }\n\n    .itemBasket {\n        margin-top: 15px;\n        text-align: left;\n    }\n\n    .remove {\n        margin-top: 4%;\n        padding: 1%;\n    }\n\n    main {\n        margin: 0 auto;\n        max-width: 1140px;\n        height: 400px;\n        padding: 2%;\n        background-color: #CCFF99;\n        \n    }\n\n    .goods {\n        display: flex;\n        justify-content: space-between;\n         max-width: 1140px;\n        flex-wrap: wrap;\n    }\n\n    .goodsItem {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        width: 100px;\n        height: 70px;\n        box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n    }\n\n    .add-to-basket {\n        width: 100px;\n        padding: 1%;\n    }\n\n    .v-error {\n        position: absolute;\n        top: 100px;\n        left: 20px;\n    }\n\n</style>\n"]}