(()=>{"use strict";var t={680:(t,e)=>{e.init=function(){Vue.component("v-cart",{props:["goods"],template:'\n            <div class="cart_container">\n                <div class="cart_drop">\n                    <div class="cart_drop__item" v-for="item in goods">\n                            <h4 class="cart_drop__item__product_name">{{item.title}}</h4>\n                            <p class="cart_drop__item__product_price">{{item.quantity}} x {{item.price}}</p>\n                            <p class="cart_drop__item__product_currency" v-html="\'₽\'"></p>\n                            <button class="cart_drop__item__button_delete" @click="$emit(\'delete\', item.id)">Удалить</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        '})}},435:(t,e)=>{e.init=function(){Vue.component("v-error",{props:["message"],template:'\n            <div class="error">\n                Ошибка! {{message}}\n            </div>\n        '})}},769:(t,e)=>{e.init=function(){Vue.component("v-goods",{props:["goods"],template:'\n            <main>\n                <section class="goods container">\n                    <v-item v-for="item in goods" v-bind:element="item" v-on:addToCart="handlerAddToCart" />\n                    <div class="goods_empty" v-if="!goods.length">\n                        <p>Нет данных.</p>\n                        <p>Информация, по Вашему запросу, отсутствует.</p>\n                    </div>\n                </section>\n            </main>\n        ',methods:{handlerAddToCart(t){this.$emit("add",t)}}})}},713:(t,e)=>{e.init=function(){Vue.component("v-header",{props:["isVisibleCart"],template:'\n            <header class="header center">\n                <a class="logo" href="#">E-Shop</a>\n                <slot />\n                <nav>\n                <button class="cart_button" @click="handlerClick" type="button">Корзина</button>\n                </nav>\n                <slot name="cart" />\n            </header>\n        ',methods:{handlerClick(){this.$emit("change-is-cart-visible")}}})}},957:(t,e)=>{e.init=function(){Vue.component("v-item",{props:["element"],template:'\n            <div class="item">\n                <img class="product_img" :src="element.image" alt="product image" />\n                <h4 class="product_name">{{element.title}}</h4>\n                <div class="price_block">\n                    <p class="product_price">{{element.price}}</p>\n                    <p class="product_badge" v-html="\'₽\'"></p>\n                </div>\n                <button class="buy_button" type="button" @click="addToCart(item)">Купить</button>\n            </div>\n        ',methods:{addToCart(){this.$emit("addToCart",this.element)}}})}},956:(t,e)=>{e.init=function(){Vue.component("v-search",{props:["value"],template:'\n            <form>\n                <input class="search" :value="value" @input="$emit(\'input\', $event.target.value)" type="text" placeholder="Что будем искать?">\n                <button class="search_button" @click="filteredGoods()">Найти</button>\n            </form>\n        '})}}},e={};function o(n){if(e[n])return e[n].exports;var s=e[n]={exports:{}};return t[n](s,s.exports,o),s.exports}(()=>{const t=(t,e="GET",o={})=>new Promise(((n,s)=>{const i=new XMLHttpRequest;i.timeout=5e3,i.ontimeout=()=>{console.log("Timeout!")},i.onreadystatechange=()=>{4===i.readyState&&(200===i.status?n(JSON.parse(i.responseText)):(console.log("Error!",i.responseText),s(i.responseText)))},i.open(e,`http://localhost:3000/api/${t}`),i.setRequestHeader("Content-Type","application/json"),i.send(JSON.stringify(o))}));o(713).init(),o(435).init(),o(956).init(),o(680).init(),o(769).init(),o(957).init(),new Vue({el:"#app",data:{goods:[],cartGoods:[],searchLine:"",isVisibleCart:!1,errorMessage:""},mounted(){this.fetchData(),this.fetchCartData()},methods:{fetchData(){return new Promise(((e,o)=>{t("catalog").then((t=>{this.goods=t,e()})).catch((t=>{this.errorMessage="Не удалось получить, список товаров!"}))}))},fetchCartData(){return new Promise(((e,o)=>{t("cart").then((t=>{this.cartGoods=t,e()})).catch((t=>{this.errorMessage="Не удалось получить, содержимое корзины!"}))}))},addToCart(e){t("cart","POST",e).then((t=>{if(console.log("Result",t),!t.success)return void console.log("addToCart Error");const o=this.cartGoods.findIndex((t=>t.id===e.id));o>-1?this.cartGoods[o].quantity+=1:this.cartGoods.push({...e,quantity:1})})).catch((t=>{this.errorMessage="Не удалось добавить, список товаров!"}))},removeItem(e){t(`cart/${e}`,"DELETE").then((t=>{console.log("Result",t),t.success?(this.cartGoods=this.cartGoods.filter((t=>t.id!==parseInt(e))),console.log(this.cartGoods)):console.log("addToCart Error")})).catch((t=>{this.errorMessage="Не удалось удалить, элемент из корзины!"}))}},computed:{filteredGoods(){const t=new RegExp(this.searchLine.trim(),"i");return this.goods.filter((e=>t.test(e.title)))},totalPrice(){return this.goods.reduce(((t,e)=>t+e.price),0)}}})})()})();