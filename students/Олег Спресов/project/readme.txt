
1. Собираем проект командой npm run build.
2. Чтобы не пересобирать проект при внесении изменений в исходных файлах,
в package.json пишем:

"scripts": {
    "build": "webpack",
    "watch": "webpack --watch",
    }
 перед изменениями запускаем  npm run watch.
 Далее вносим изменения и они автоматически перейдут в имеющуюся сборку.
 Выходим из режима отслеживания Ctrl+C. Далее запускаем сервер и т.д.


 Возникли следующие вопросы и сложности.

 1. Не смог импортировать папку ./css c изображениями в script.js.
 Пришлось импортировать по одному, что явно неправильно и громоздко выглыдит.
 2. Сейчас мы собираем проект в папку ./dist и далее запускаем сервер node server.
 Попробовал добавить в webpack.config.js сервер:

 devServer: {
        historyApiFallback: true,
        contentBase: './dist',
        open: true,
        compress: true,
        hot: true,
        port: 3000,
    },
 и в package.json:

 "scripts": {
    "start": "webpack serve"
  },
 чтобы командой npm start запускать сервер из сборки.
 Сборка осуществляется в памяти (создается папка ./dist, сервер запускается,
 в браузере вижу index.html. Но естественно не подтягиваюся данные из
 catalog.json и basket.json, т.к., по-видимому, не интегрирован server.js.
 Вопрос. Как интегрировать серверные части в сборку?